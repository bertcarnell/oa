Orthogonal Arrays for:
	Computer Experiments,
	Visualization,
	and Integration
in high dimensions.


NOTE:    this material is superseded by the programs
       oa.c.   Keep reading if you prefer to get
       the orthogonal arrays as flat files instead
       of running a program.  The programs in oa.c
       generate a superset of the designs given here.

         The flat files were generated by the programs
       in oa.c and are in some respects better than those
       of the original submission: they print prettier,
       and the least desirable column of the ak and bb
       designs is now given last.

       -Art Owen, 21 June 1994


TABLE OF CONTENTS:
  Introduction
  Motivation
  GF arrays
  AK arrays
  BB arrays
  Extensions
  Other files
  References
  Support

Introduction:

  This submission contains a set of orthogonal arrays
of strength two for computer experiments.  An orthogonal
array of strength two is an Nxk design matrix of q symbols
(0..q-1) such that in any Nx2 submatrix the number of
occurrences of each of the q^2 possible rows is the same
for all possible rows.  This number is denoted lambda.
Clearly, N = lambda x q^2, and each two column scatterplot is
a regular grid of size qxq with lambda repeated points in
each cell.

  Orthogonal arrays of strength t have grid-like projections
onto any set of t (or fewer) columns.  Latin hypercube samples
are (essentially) orthogonal arrays of strength 1.

  The usual definition of an orthogonal array is the transpose
of the one used here.

  The notation OA(N,k,q,t) is used to denote an orthogonal array
with N rows, k columns, q symbols and strength t.  k is usually
called the number of constraints in the array.  Clearly 
lambda = N/q^t.  Raghavarao [1, Chapter 2] gives a good introduction
to orthogonal arrays.

Motivation:

  Visualization....Given a function in d dimensions, one
might want to run it at N points and then use interactive
data analysis on the output.  For example if the function
computes switching speed and breakdown voltage of a semiconductor
device give d=10 process settings one might select those points
with a large enough breakdown voltage and a large enough speed
and then make plots in lower dimensions of  the corresponding
process settings.   Full 10 dimensional grids are infeasible for
this.  Latin hypercube samples can miss settings where there
are strong effects in the corners.  For example if one setting
is oxidation temperature and another is oxidation time we expect
that the corners (hi,hi) and (lo,lo) will be significant.
It can happen that Latin hypercube samples have gaps in these
corners.  There are 4*C(d,2)=2d(d-1) "bivariate" corners to investigate
and random designs or Latin hypercube samples can easily miss
some of them.

  Integration....The sum of function values over a Latin hypercube
sample is a good estimate of the integral over the input cube,
for functions that are nearly additive.   Stein [2] shows how this
works.   Owen [3] gives a central limit theorem for the integral and
shows how to estimate the variance.   The sum over an orthogonal
array of strength 2 gives a similarly good estimate of the integral
for functions dominated by main effects and two factor interactions
among the input variables.  Owen [4] discusses this.

  Computer Experiments....In many computer experiments the visualization
methods outlined above are sufficiently informative.  Sometimes one
would like to find response surface models for the function, perhaps
for predictive purposes, or for interpolation to a finer visualization
data set.  Least squares regression methods can be applied here.
The population coefficients are determined from certain integrals
over the input space.  These can be estimated by the sum over a 
sample (independent, Latin hypercube, orthogonal array).  More
accurate sample integrals imply more accurately estimated response
surfaces.

   Multivariate Nonparametric Regression....These arrays might
form good designs for fitting models like MARS, Friedman [7].

GF Arrays:

  Suppose that q, the number of distinct values per axis,
is a prime or a prime raised to a power.  Then there exists
a Galois field with q elements, GF(q).  Using this field one
can construct OA( q^2,q+1,q,2 ) the orthogonal array with
N=q^2 rows, k=q+1 columns, q symbols and strength 2.
The construction is a special case of the one given in
Raghavarao 2.4 and appears to be very old.  Let column 1
be q 0's, q 1's,...,q (q-1)'s and let column 2 be q repetitions
of (0,1,...,q-1).   Then for 1 <= k <= q-1 column k+2 is
(column 1) + k * (column 2) where the addition and multiplication
take place in GF(q).  If q is prime these are simply addition 
and multiplication modulo q.  Random permutation of the labels
within columns preserves the orthogonality, breaks up the "planes"
and provides a basis for randomization inference.

  The files gf.02, gf.03, gf.04 ... contain these arrays
with q=2,3,4,5,7,8,9,11,13,16.  Note that gf.q contains q^3+q^2 numbers
so files with q=17,25,27,32 come in their own shar files.

  When q is not a prime power the larges number of columns k can be
much less than q+1.  In general if c mutually orthogonal latin
squares of side q can be found, then an orthogonal array of k=c+2
columns may be constructed.  For q=6, k=3 is the limit.

  These designs are q^(q-1) fractional replications of q^(q+1) 
factorials with resolution III.  That is they might be denoted
q_III^[(q+1)-(q-1)].
 
  In practice one might use the first 5 columns of gf.16 to get
256 runs in 5 variables.  If some input variables only takes 2
values (on/off say)  then they can be coded as a column of gf.q for any
even number q by mapping 0..q/2-1 to on and q/2..q-1 to off.

  Taguchi's L9 has the same form as gf.03, L25 has the form of gf.05.
The array qf.32 could be called L1024.

AK Arrays:

  With N=q^2 only q+1 columns are possible.  Addelman and Kempthorne [5]
show how to get 2q+1 columns in N=2q^2 rows.  As before q is a prime or
a power of a prime.  The files ak.02,...,ak.11 contain these designs
for q=2,3,5,7,9,11.  The algorithm for even q is not as easy to code,
but the bb2 arrays below fill that role.  The array L18 has the same
form as ak.03.  This array was known before Addelman and Kempthorne 
by Bose and Bush [6] and is alluded to in a note added in proof to
Plackett and Burman [8].
  These designs are OA( 2q^2,2q+1,q,2 ).

BB Arrays:

  Bose and Bush [6] show how to construct 
OA( lambda x q^2, lambda x q, q, 2 ) where q is a prime
power and lambda is a power of the same prime.  The designs
bb2.02,...,bb2.16 are of this form with lambda=2, except that
they are augmented with a 2q+1st column using a method Bose
and Bush [6] discuss.  So they are of the form
OA( 2q^2, 2q+1, q, 2 ) where q is a power of 2, augmenting the
designs available from Addelman and Kempthorne [5].

Extensions:

  It is possible to construct arrays of strength 3.  These
might be useful for the same purposes as arrays of strength
2, but they require much larger numbers N of runs.

  If you want q levels and q is not a power of a prime, the
MacNeish-Mann theorem might help.  If q=25*4, you can get
an array with 5 columns of 4 symbols (gf.04) and an array
with 26 columns of 25 symbols (gf.25).  Take the first 
5 columns of gf.25.  Then make an array of 100x5
symbols in which the kth column is obtained by taking each
element of the kth column of gf.25 and replacing it by a 
vector of length 16 formed by taking 4* the element of
gf.25 and adding the 16 values in the kth column of gf.4.

Other files:

  The files ak.index, bb2.index and gf.index list the
available arrays, with their number of levels, columns 
and rows.  The file index merges these three files.
  The file statement contains a message giving permission
to use these designs without charge.

References:

[1] Raghavarao, D. (1971) Construction and Combinatorial
	Problems in Design of Experiments.  Wiley.

[2] Stein, M. (1987) Large Sample Properties of Simulations
	Using Latin Hypercube Sampling.  Technometrics
	v 29 pp 143--151.

[3] Owen, A. (1992) A Central Limit Theorem for Latin 
	Hypercube Sampling.  JRSS-B, in press.

[4] Owen, A. (1991) Orthogonal Arrays for Computer Experiments
	Integration and Visualization.  in preparation.

[5] Addelman, S. and Kempthorne, O. (1961) Some Main-Effect 
	Plans and Orthogonal Arrays of Strength Two.
	Ann. Math. Stat. v 32 pp 1167--1176

[6] Bose, R. and Bush, K. (1952) Orthogonal Arrays of Strength
	Two and Three.  Ann. Math. Stat. v 23 pp 508--524.

[7] Friedman, J. (1991) Multivariate Adaptive Regression Splines.
	(with discussion) Ann. Stat. v19 pp 1--141

[8] Plackett, R. and Burman, J. (1946) The Design of Optimum
	Multifactorial Experiments.  Biometrika v 33 pp 305--325

Support:

  I will attempt to answer questions emailed to owen@stat.stanford.edu
(unless the level of demand gets too high).


Art Owen, 23-May-91

================================================================

Design  Levels  Runs  Variables

gf.q      q      q*q     q+1
ak.q      q     2q*q    2q+1
bb2.q     q     2q*q    2q+1

gf.02     2      4       3
bb2.02    2      8       5
gf.03     3      9       4
ak.03     3     18       7
gf.04     4     16       5
bb2.04    4     32       9
gf.05     5     25       6
ak.05     5     50      11
gf.07     7     49       8
ak.07     7     98      15
gf.08     8     64       9
bb2.08    8    128      17
gf.09     9     81      10
ak.09     9    162      19
gf.11    11    121      12
ak.11    11    242      23
gf.13    13    169      14
gf.16    16    256      17
bb2.16   16    512      33
gf.17    17    289      18
gf.25    25    625      26
gf.32    32   1024      33
